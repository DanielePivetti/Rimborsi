"""Aggiunta colonna stato a richiesta_log e rimozione tipo_evento

Revision ID: 00ee4210f6c7
Revises: a1b2c3d4e5f6
Create Date: 2025-07-30 16:08:33.931609

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '00ee4210f6c7'
down_revision = 'a1b2c3d4e5f6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('richiesta_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('richiesta_id', sa.Integer(), nullable=False),
    sa.Column('utente_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('descrizione', sa.String(length=255), nullable=True),
    sa.Column('dati_aggiuntivi', sa.JSON(), nullable=True),
    sa.Column('stato', sa.Enum('IN_LAVORAZIONE', 'TRASMESSA', 'APPROVATA', 'RIFIUTATA', name='statorichiesta'), nullable=True),
    sa.ForeignKeyConstraint(['richiesta_id'], ['richieste.id'], ),
    sa.ForeignKeyConstraint(['utente_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('giustificativi')
    with op.batch_alter_table('documenti_spesa', schema=None) as batch_op:
        batch_op.alter_column('file_path',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)

    with op.batch_alter_table('richieste', schema=None) as batch_op:
        batch_op.alter_column('stato',
               existing_type=sa.VARCHAR(length=22),
               type_=sa.Enum('IN_LAVORAZIONE', 'TRASMESSA', 'ISTRUITA', name='statorichiesta'),
               existing_nullable=False)

    with op.batch_alter_table('spese_viaggi', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('spese_viaggi', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('richieste', schema=None) as batch_op:
        batch_op.alter_column('stato',
               existing_type=sa.Enum('IN_LAVORAZIONE', 'TRASMESSA', 'ISTRUITA', name='statorichiesta'),
               type_=sa.VARCHAR(length=22),
               existing_nullable=False)

    with op.batch_alter_table('documenti_spesa', schema=None) as batch_op:
        batch_op.alter_column('file_path',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    op.create_table('giustificativi',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('spesa_id', sa.INTEGER(), nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=9), nullable=False),
    sa.Column('numero', sa.VARCHAR(length=100), nullable=True),
    sa.Column('data_emissione', sa.DATE(), nullable=False),
    sa.Column('emesso_da', sa.VARCHAR(length=255), nullable=False),
    sa.Column('importo', sa.FLOAT(), nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=255), nullable=False),
    sa.Column('data_creazione', sa.DATETIME(), nullable=True),
    sa.Column('data_modifica', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['spesa_id'], ['spese.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('richiesta_log')
    # ### end Alembic commands ###
