=== Riferimenti a 'parcheggio' ===
C:\DEV_FLASK\rimborsi\apply_db_changes.py: 6 occorrenze
  Riga 20: # 1. Aggiorna i record esistenti che usano il tipo spesa PARCHEGGIO (05)
  Riga 25: # 2. Aggiorna il discriminator_type per le spese di parcheggio
  Riga 26: cursor.execute("UPDATE spese SET discriminator_type = 'spesa_viaggi' WHERE discriminator_type = 'spesa_parcheggio'")
  Riga 28: log_file.write(f"Aggiornati {rows_updated_discriminator} record con discriminator_type='spesa_parcheggio' a discriminator_type='spesa_viaggi'\n")
  Riga 32: count_parcheggio = cursor.fetchone()[0]
  Riga 33: log_file.write(f"Record rimasti con tipo='05' (dovrebbe essere 0): {count_parcheggio}\n")
C:\DEV_FLASK\rimborsi\check_migration.py: 4 occorrenze
  Riga 16: # Verifica se ci sono ancora spese di tipo PARCHEGGIO
  Riga 17: spese_parcheggio = Spesa.query.filter_by(tipo='05').all()
  Riga 18: print(f"Spese di tipo PARCHEGGIO (dovrebbero essere 0): {len(spese_parcheggio)}")
C:\DEV_FLASK\rimborsi\check_migration_to_file.py: 5 occorrenze
  Riga 24: # Verifica se ci sono ancora spese di tipo PARCHEGGIO
  Riga 26: spese_parcheggio = Spesa.query.filter_by(tipo='05').all()
  Riga 27: f.write(f"Spese di tipo PARCHEGGIO (dovrebbero essere 0): {len(spese_parcheggio)}\n")
  Riga 29: f.write(f"Errore nel conteggio delle spese PARCHEGGIO: {str(e)}\n")
C:\DEV_FLASK\rimborsi\delete_richiesta.py: 1 occorrenze
  Riga 29: for table in ['spese_carburante', 'spese_vitto', 'spese_pedaggi', 'spese_ripristino', 'spese_parcheggio', 'spese_altro']:
C:\DEV_FLASK\rimborsi\migrazione_finale.py: 22 occorrenze
  Riga 2: Script per completare la migrazione del modello di dati da Parcheggio a Viaggi
  Riga 13: log_file.write(f"Migrazione finale da Parcheggio a Viaggi\n")
  Riga 40: # Verifica se esiste la tabella spese_parcheggio
  Riga 41: cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='spese_parcheggio'")
  Riga 42: exists_parcheggio = cursor.fetchone() is not None
  Riga 44: if exists_parcheggio:
  Riga 45: log_file.write("\nLa tabella 'spese_parcheggio' esiste.\n")
  Riga 48: cursor.execute("SELECT COUNT(*) FROM spese_parcheggio")
  Riga 49: count_parcheggio = cursor.fetchone()[0]
  Riga 51: if count_parcheggio > 0:
  Riga 52: log_file.write(f"La tabella 'spese_parcheggio' contiene {count_parcheggio} record.\n")
  Riga 55: # Ottieni tutti i record da spese_parcheggio
  Riga 56: cursor.execute("SELECT id, indirizzo, durata_ore FROM spese_parcheggio")
  Riga 57: parcheggio_records = cursor.fetchall()
  Riga 60: for record in parcheggio_records:
  Riga 69: log_file.write("La tabella 'spese_parcheggio' è vuota.\n")
  Riga 71: # Elimina la tabella spese_parcheggio se non è più necessaria
  Riga 72: log_file.write("Eliminando la tabella 'spese_parcheggio'...\n")
  Riga 73: cursor.execute("DROP TABLE spese_parcheggio")
  Riga 74: log_file.write("Tabella 'spese_parcheggio' eliminata.\n")
  Riga 76: log_file.write("\nLa tabella 'spese_parcheggio' non esiste.\n")
C:\DEV_FLASK\rimborsi\update_tipo_spesa.py: 9 occorrenze
  Riga 2: Script per aggiornare il tipo di spesa da PARCHEGGIO a VIAGGI
  Riga 25: # Aggiorna i record con tipo PARCHEGGIO a VIAGGI
  Riga 26: cursor.execute("UPDATE spese SET tipo = 'VIAGGI' WHERE tipo = 'PARCHEGGIO'")
  Riga 28: log_file.write(f"Aggiornati {rows_updated} record da PARCHEGGIO a VIAGGI\n")
  Riga 30: # Verifica se ci sono ancora record con tipo PARCHEGGIO
  Riga 31: cursor.execute("SELECT COUNT(*) FROM spese WHERE tipo = 'PARCHEGGIO'")
  Riga 32: count_parcheggio = cursor.fetchone()[0]
  Riga 33: log_file.write(f"Record rimasti con tipo PARCHEGGIO (dovrebbe essere 0): {count_parcheggio}\n")
C:\DEV_FLASK\rimborsi\verifica_coerenza.py: 9 occorrenze
  Riga 45: pattern_parcheggio = r'parcheggio'
  Riga 47: # Cerca riferimenti a "parcheggio"
  Riga 48: risultati_parcheggio = cerca_riferimenti(directory_base, pattern_parcheggio, estensioni)
  Riga 52: log.write("=== Riferimenti a 'parcheggio' ===\n")
  Riga 53: if not risultati_parcheggio:
  Riga 56: for filepath, matches in risultati_parcheggio:
  Riga 63: if re.search(pattern_parcheggio, line, re.IGNORECASE):
C:\DEV_FLASK\rimborsi\verifica_finale.py: 6 occorrenze
  Riga 54: # Verifica l'assenza della tabella spese_parcheggio
  Riga 55: cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='spese_parcheggio'")
  Riga 56: exists_parcheggio = cursor.fetchone() is not None
  Riga 58: if exists_parcheggio:
  Riga 59: log_file.write("\nATTENZIONE: La tabella 'spese_parcheggio' esiste ancora!\n")
  Riga 61: log_file.write("\nLa tabella 'spese_parcheggio' è stata eliminata correttamente.\n")
C:\DEV_FLASK\rimborsi\migrations\versions\a1b2c3d4e5f6_sostituito_tipo_spesa_parcheggio_con_viaggi.py: 8 occorrenze
  Riga 1: """Sostituito tipo spesa Parcheggio con Viaggi
  Riga 22: # 1. Modifica del tipo spesa da PARCHEGGIO a VIAGGI nella tabella spese
  Riga 24: # Aggiorna il tipo di spesa da '05' (PARCHEGGIO) a '07' (VIAGGI)
  Riga 28: op.execute("UPDATE spese SET discriminator_type = 'spesa_viaggi' WHERE discriminator_type = 'spesa_parcheggio'")
  Riga 30: # 3. Rinomina la colonna 'parcheggio' a 'viaggio' se esiste
  Riga 39: # 1. Ripristina il tipo di spesa da '07' (VIAGGI) a '05' (PARCHEGGIO)
  Riga 44: op.execute("UPDATE spese SET discriminator_type = 'spesa_parcheggio' WHERE discriminator_type = 'spesa_viaggi'")
  Riga 46: # 3. Rinomina la colonna 'viaggio' a 'parcheggio' se era stata rinominata
C:\DEV_FLASK\rimborsi\migrations\versions\c8602570d1de_remove_rimborso_model.py: 3 occorrenze
  Riga 58: sa.Column('tipo', sa.Enum('CARBURANTE', 'VITTO', 'PEDAGGI', 'RIPRISTINO', 'PARCHEGGIO', 'ALTRO', name='tipospesa'), nullable=False),
  Riga 97: op.create_table('spese_parcheggio',
  Riga 152: op.drop_table('spese_parcheggio')

=== File di migrazione e backup ===
File di backup: C:\DEV_FLASK\rimborsi\app\blueprints\spesa.py.bak
File di backup: C:\DEV_FLASK\rimborsi\app\blueprints\spesa.py.bak2
File di backup: C:\DEV_FLASK\rimborsi\app\blueprints\spesa.py.new
File di backup: C:\DEV_FLASK\rimborsi\app\models\spesa.py.bak
File di backup: C:\DEV_FLASK\rimborsi\app\templates\base.html.new
File di backup: C:\DEV_FLASK\rimborsi\app\templates\richieste\gestione_spese.html.new
